<Page
    x:Class="DotaMax.Views.NewsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DotaMax.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vt="using:DotaMax.Converter"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls" xmlns:models="using:DotaMax.Models.MaxNews" xmlns:selector="using:DotaMax.TemplateSelector"
    mc:Ignorable="d"
    Background="#e2e6ea">
    <Page.Resources>
        <vt:DateTimeConverter x:Key="dtConverter"/>
        <vt:BoolToVisibilityConverter x:Key="bool2VisConverter"/>
        <vt:IntToVisibilityConverter x:Key="int2VisConverter"/>
        <Style x:Key="NewsListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" Margin="0,1" BorderThickness="0" Background="White" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="#f0f2f5" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="Transparent"  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBackground" Value="White"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBackground" Value="#f0f2f5"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBackground" Value="#D0FFFFFF"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBackground" Value="#f0f2f5"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBackground" Value="#B0FFFFFF"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBackground" Value="#f0f2f5"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBackground" Value="#f0f2f5"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Name="HeaderNews" x:DataType="models:Result">
            <Grid Height="224" Margin="-8,0,-8,0" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="22"/>
                </Grid.RowDefinitions>
                <controls:ImageEx Grid.Row="0" Grid.RowSpan="2" Height="224" IsCacheEnabled="False" Background="#F4F5F8" Margin="0,2"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill"
                                  PlaceholderStretch="None" PlaceholderSource="/Assets/Icons/defaultImg.png"
                                  Source="{x:Bind imgs[0]}"/>
                <Grid Grid.Row="0" Grid.RowSpan="2">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.7">
                            <GradientStop Offset="1" Color="#EE000000"/>
                            <GradientStop Offset="0.7" Color="#B0000000"/>
                            <GradientStop Offset="0" Color="#10000000"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
                <TextBlock Grid.Row="0" Width="356" MaxHeight="42" CharacterSpacing="48" VerticalAlignment="Bottom" Foreground="White" FontSize="13" Margin="6" FontWeight="Bold" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{x:Bind title}"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <Image Source="/Assets/Icon/time.png" Height="8"/>
                    <TextBlock Text="{x:Bind date, Converter={StaticResource dtConverter}}" Foreground="#c0c5c9" FontWeight="Medium" FontSize="10" VerticalAlignment="Center" Margin="4,0,0,1"/>
                    <Rectangle Height="8" Width="1" Fill="#c0c5c9" Opacity="0.7" Margin="4,0,4,0"/>
                    <Image Source="/Assets/Icon/read.png" Height="8"/>
                    <TextBlock Text="{x:Bind click}" Foreground="#c0c5c9" FontWeight="Medium" FontSize="10" VerticalAlignment="Center" Margin="4,0,0,1"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Name="NormalNews" x:DataType="models:Result">
            <Grid Height="88" Margin="-8,0,-8,0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="128"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <controls:ImageEx Height="auto" Width="128" IsCacheEnabled="False" Background="#F4F5F8" Margin="0,2"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill"
                                  PlaceholderStretch="None" PlaceholderSource="/Assets/Icons/defaultImg.png"
                                  Source="{x:Bind imgs[0]}"/>
                <Image Source="/Assets/Icon/video.png" Height="24" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8,0,0,10" Visibility="{x:Bind has_video, Converter={StaticResource int2VisConverter}}"/>
                <TextBlock Grid.Column="1" Width="238" MaxHeight="42" CharacterSpacing="32" VerticalAlignment="Top" Foreground="Black" FontSize="13" Margin="6" FontWeight="Bold" HorizontalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{x:Bind title}"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="6,0,0,6">
                    <Image Source="/Assets/Icon/time.png" Height="10"/>
                    <TextBlock Text="{x:Bind date, Converter={StaticResource dtConverter}}" Foreground="#c0c5c9" FontWeight="Medium" FontSize="11" VerticalAlignment="Center" Margin="4,0,0,1"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,12,6">
                    <Image Source="/Assets/Icon/read.png" Height="10"/>
                    <TextBlock Text="{x:Bind click}" Foreground="#c0c5c9" FontWeight="Medium" FontSize="11" VerticalAlignment="Center" Margin="4,0,0,1"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="388"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Background="#e2e6ea">
            <Grid.RowDefinitions>
                <RowDefinition Height="64"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="发现" Foreground="Black" FontSize="26" FontWeight="Bold" VerticalAlignment="Bottom" Margin="16,0"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="16,12,0,0">
                <Image Source="/Assets/Icon/band_icon_max.png" Height="20" Width="20"/>
                <TextBlock Text="新闻" FontWeight="Bold" Foreground="#151E27" FontSize="13" CharacterSpacing="48" VerticalAlignment="Center" Margin="0,2,0,0"/>
            </StackPanel>
            <ListView ItemContainerStyle="{StaticResource NewsListViewItemContainerStyle}" Grid.Row="2" ItemsSource="{x:Bind viewModel.NewsCollection}"
                      VerticalAlignment="Center" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,12,0,0">
                <ListView.ItemTemplateSelector>
                    <selector:NewsTemplateSelector HeaderNews="{StaticResource HeaderNews}" NormalNews="{StaticResource NormalNews}"/>
                </ListView.ItemTemplateSelector>
            </ListView>
        </Grid>
        <controls:DropShadowPanel Grid.Column="1" BlurRadius="16">
            <Rectangle Fill="Black" Width="2" HorizontalAlignment="Left" Opacity="0.7"/>
        </controls:DropShadowPanel>
        <Grid Grid.Column="1" Background="#e2e6ea">
            <Frame x:Name="NewsFrame" Background="#e2e6ea"/>
        </Grid>
    </Grid>

</Page>
